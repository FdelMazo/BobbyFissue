name: "UpdateBoard"

on:
  issue_comment:
    types: [created]

jobs:
  move:
    runs-on: ubuntu-latest
    if: startsWith(github.event.issue.title, '[CHESS]')
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
      - uses: BSFishy/pip-action@v1
        with:
          packages: chess

      - name: Find Player Comment
        uses: peter-evans/find-comment@v1
        id: fcc
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-author: "github-actions[bot]"
          body-includes: "## New Game!"
      - name: Find Board Comment
        uses: peter-evans/find-comment@v1
        id: fcb
        with:
          issue-number: ${{ github.event.issue.number }}
          comment-author: "github-actions[bot]"
          body-includes: "## Board"

      - name: Find Player Colors
        id: colors
        run: |
          echo "::set-output name=white::${{ github.event.repository.owner.login }}"
          echo "::set-output name=black::${{ github.event.issue.user.login }}"

      - name: Parse Move and Board
        id: parser
        run: |
          CURRFEN="$(echo '${{ steps.fcb.outputs.comment-body }}' | grep -oP '(?<=`)(.*)(?=`)')"
          echo "::set-output name=current_fen::$CURRFEN"
      - name: Play Move
        id: fen
        run: |
          FEN="$(python3 ./scripts/chessmove.py '${{steps.parser.outputs.current_fen}}' '${{github.event.comment.body}}')"
          echo "::set-output name=fen::$FEN"

          toplay="$(echo $FEN | cut -d' ' -f2 )"
          customfen="$(echo $FEN | cut -d' ' -f7 )"

          if [ ${toplay} == "w" ]; then
              echo "::set-output name=header::White to Play"
          elif [ ${toplay} == "b" ]; then
              echo "::set-output name=header::Black to Play"
          fi

          if [ ${customfen} == "I" ]; then
              echo "::set-output name=invalid::true"
          elif [ ${customfen} == "W" ]; then
            echo "::set-output name=finished::true"
            if [ ${toplay} == "w" ]; then
                echo "::set-output name=header::Black Wins!"
            elif [ ${toplay} == "b" ]; then
                echo "::set-output name=header::White Wins!"
            fi
          elif [ ${customfen} == "D" ]; then
            echo "::set-output name=finished::true"
            echo "::set-output name=header::Draw!"
          fi
      - name: Show Move
        id: board
        run: |
          BOARD="$(python3 ./scripts/fen2md.py '${{steps.fen.outputs.fen}}' | python3 ./scripts/replace_images.py)"
          BOARD="${BOARD//'%'/'%25'}"
          BOARD="${BOARD//$'\n'/'%0A'}"
          BOARD="${BOARD//$'\r'/'%0D'}"
          echo "::set-output name=board::$BOARD"
      - name: Edit Board Comment
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ steps.fcb.outputs.comment-id }}
          edit-mode: replace
          body: |
            ## Board
            ### ${{ steps.fen.outputs.header }}
            `${{steps.fen.outputs.fen}}`
            ${{ steps.board.outputs.board }}

      - name: React to Invalid Moves
        if: ${{ steps.fen.outputs.invalid }}
        uses: peter-evans/create-or-update-comment@v1
        with:
          comment-id: ${{ github.event.comment.id }}
          reactions: confused
      - name: Close finished games
        if: ${{ steps.fen.outputs.finished }}
        uses: peter-evans/close-issue@v1
        with:
          issue-number: ${{ github.event.issue.number }}
